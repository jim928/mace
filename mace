#!/usr/bin/env bash

version="0.1.42"

script_name=$(basename "$0")
jim928Path=$(brew --repo)/Library/Taps/jim928

usage() {
  cat <<EOF
Script name: $script_name
Description:
============

This is a script to config environment of mac dev in dev Apps
~/Library/Application Support/Google
~/Library/Developer/Xcode/UserData

jim@jimdeMBP ~ % brew --repo
/usr/local/Homebrew
jim@jimdeMBP ~ % brew --repo jim928/mace
/usr/local/Homebrew/Library/Taps/jim928/homebrew-mace

how to publish new version of mace;
1,new code in mace git project and commit and push;
2,make new tag from the last commit and push;
3,make new release from the tag just made;
4,right click and copy the link from the release : Source code (tar.gz);
5,open terminal , and use command : brew create linkJustCopied;
6,input the formulaName : mace and copy the sha256 value;
7,update the link and the sha256 to the git project : homebrew-mace and push;
8,delete the mace.rb file created in step 7;  (use deleterb command)

Examples:
=========
    # config for all (AndroidStudio,Xcode)
    $script_name config
    # config for AndroidStudio
    $script_name configas
    # config for Xcode
    $script_name configxc
    # Show help
    $script_name -h
    # Show version
    $script_name -v
    # push local change to github for AndroidStudio templates
    $script_name pushas
    # push local change to github for XCode CodeSnippets
    $script_name pushxc
    # push local change to github for IdeaIC templates
    $script_name pushidea
    # push local change to github for templates and CodeSnippets
    $script_name push
    # find and delete the mace.rb file in update steps
    $script_name deleterb
    # generate id_ed25519 sshkey if not exist,and copy to clipboard
    $script_name sshkey
EOF
}

githubHelp() {
  cat <<EOF
1，settings
2，Developer settings
3, Personal access tokens
4, Generate new token
5, set expiration and repo access check
6, generate 复制好生成的token内容
7, brew install gh
8, gh auth login
9, GitHub.com -> HTTPS -> y -> Login with a web browser
EOF
}
# shell cheat sheet https://devhints.io/bash

#homebrew 库的目录 ： jim928Path

configFunc() {
  taskName=""
  appPath=""
  gitUrl=""
  gitProjectName=""
  shouldLoop="1"
  appName=""
  finalFolder=""

  if [ "$1" = 1 ]; then
    taskName="AndroidStudioKeyMaps"
    appPath=~/Library/Application\ Support/Google
    gitUrl="https://github.com/jim928/keymapsas.git"
    gitProjectName="keymapsas"
    shouldLoop="1"
    appName="AndroidStudio"
    finalFolder="keymaps"
  elif [ "$1" = 2 ]; then
    taskName="AndroidStudioTemplates"
    appPath=~/Library/Application\ Support/Google
    gitUrl="https://github.com/jim928/templatesas.git"
    gitProjectName="templatesas"
    shouldLoop="1"
    appName="AndroidStudio"
    finalFolder="templates"
  elif [ "$1" = 3 ]; then
    taskName="XCodeCodeSnippets"
    appPath=~/Library/Developer/Xcode/UserData
    gitUrl="https://github.com/jim928/CodeSnippets.git"
    gitProjectName="CodeSnippets"
    shouldLoop="0"
    appName="XCode"
    finalFolder="CodeSnippets"
  elif [ "$1" = 5 ]; then
    taskName="IntellijIdeaCKeyMaps"
    appPath=~/Library/Application\ Support/JetBrains
    gitUrl="https://github.com/jim928/keymapsas.git"
    gitProjectName="keymapsas"
    shouldLoop="1"
    appName="IdeaIC"
    finalFolder="keymaps"
  elif [ "$1" = 6 ]; then
    taskName="IntellijIdeaCTemplates"
    appPath=~/Library/Application\ Support/JetBrains
    gitUrl="https://github.com/jim928/templatesas.git"
    gitProjectName="templatesas"
    shouldLoop="1"
    appName="IdeaIC"
    finalFolder="templates"
  fi

  if [[ -z "$taskName" ]]; then
    echo "unknown task name "
    return
  fi

  echo "**********************************"
  echo "--taskName : $taskName"
  echo "--appPath : $appPath"
  echo "--gitUrl : $gitUrl"
  echo "--gitProjectName : $gitProjectName"
  echo "--shouldLoop : $shouldLoop"
  echo "--appName : $appName"
  echo "--finalFolder : $finalFolder"

  echo "now start config for task : $taskName"

  cd "$jim928Path" || echo "cd to path failed :$jim928Path"

  #文件夹存在则删除其内容
  if [ -d "$gitProjectName" ]; then
    rm -rf ./"$gitProjectName"
    echo "removing all files in $gitProjectName"
  fi

  cd "$appPath" || echo "cd to path failed :$appPath"
  echo "current path : $appPath"

  if [ $shouldLoop = "1" ]; then
    #android studio的快捷键配置文件路径举例为
    #~/Library/Application\ Support/Google/AndroidStudio2021.1/keymaps/macOS\ copy.xml
    #因此先找到已安装的所有AS不同版本文件夹

    for i in "$appPath"/"$appName"*; do
      echo "$i"
      cd "$i" || echo "cd to path failed :$i"

      if [ -d "$finalFolder" ]; then
        echo "dir $finalFolder exist, now delete it and mkdir"
        rm -rf "$finalFolder"
      fi

      #clone的时候修改文件名称为 finalFolder
      git clone "$gitUrl" "$finalFolder"
    done
  else

    if [ -d "$finalFolder" ]; then
      echo "dir $finalFolder exist, now delete it and mkdir"
      rm -rf "$finalFolder"
    fi

    #clone的时候修改文件名称为 finalFolder
    git clone "$gitUrl" "$finalFolder"
  fi

  echo "task $taskName done"
}

testFunc() {

  openGoogleFolder

}

configAndroidStudio() {
  configFunc 1
  configFunc 2
}

configXCode() {
  configFunc 3
}

configIdea() {
  configFunc 5
  configFunc 6
}

deleterb() {
  find $(brew --repo)/Library/Taps -name 'mace.rb' -type f -print -exec rm -rf {} \;
#  deletePath=$(brew --repo)/Library/Taps/homebrew/homebrew-core/Formula
#  cd deletePath || echo "cd to path failed :$deletePath"
#  rm ./mace.rb
}

openGoogleFolder() {
  open ~/Library/Application\ Support/Google
}
openUserDataFolder() {
  open ~/Library/Developer/Xcode/UserData
}
openJetBrainFolder() {
  open ~/Library/Application\ Support/JetBrains
}

getSSHKey() {
  FILE=~/.ssh/id_ed25519.pub
  if test -f "$FILE"; then
    echo "$FILE exist"
  else
    echo "generate now"
    ssh-keygen -t ed25519 -C "<$(date +%Y%m%d)$USER>"
  fi
  echo "now its in clipboard"
  tr -d '\n' <~/.ssh/id_ed25519.pub | pbcopy
}

pushFuc() {
  taskName=""
  appPath=""
  gitUrl=""
  shouldLoop="1"
  appName=""
  finalFolder=""

  if [ "$1" = 1 ]; then
    taskName="AndroidStudioKeyMaps"
    appPath=~/Library/Application\ Support/Google
    gitUrl="https://github.com/jim928/keymapsas.git"
    gitProjectName="keymapsas"
    shouldLoop="1"
    appName="AndroidStudio"
    finalFolder="keymaps"
  elif [ "$1" = 2 ]; then
    taskName="AndroidStudioTemplates"
    appPath=~/Library/Application\ Support/Google
    gitUrl="https://github.com/jim928/templatesas.git"
    gitProjectName="templatesas"
    shouldLoop="1"
    appName="AndroidStudio"
    finalFolder="templates"
  elif [ "$1" = 3 ]; then
    taskName="XCodeCodeSnippets"
    appPath=~/Library/Developer/Xcode/UserData
    gitUrl="https://github.com/jim928/CodeSnippets.git"
    gitProjectName="CodeSnippets"
    shouldLoop="0"
    appName="XCode"
    finalFolder="CodeSnippets"
  elif [ "$1" = 5 ]; then
    taskName="IntellijIdeaCTemplates"
    appPath=~/Library/Application\ Support/JetBrains
    gitUrl="https://github.com/jim928/keymapsas.git"
    gitProjectName="keymapsas"
    shouldLoop="1"
    appName="IdeaIC"
    finalFolder="keymaps"
  elif [ "$1" = 6 ]; then
    taskName="IntellijIdeaCTemplates"
    appPath=~/Library/Application\ Support/JetBrains
    gitUrl="https://github.com/jim928/templatesas.git"
    gitProjectName="templatesas"
    shouldLoop="1"
    appName="IdeaIC"
    finalFolder="templates"
  fi

  if [[ -z "$taskName" ]]; then
    echo "unknown task name "
    return
  fi

  cd "$appPath" || echo "cd to path failed :$appPath"
  echo "current path : $appPath"

  if [ $shouldLoop = "1" ]; then
    #android studio的快捷键配置文件路径举例为
    #~/Library/Application\ Support/Google/AndroidStudio2021.1/keymaps/macOS\ copy.xml
    #因此先找到已安装的所有AS不同版本文件夹

    for i in "$appPath"/"$appName"*; do
      echo "$i"
      cd "$i" || echo "cd to path failed :$i"

      if [ -d "$finalFolder" ]; then
        echo "dir $finalFolder exist"
        cd ./"$finalFolder" || echo "cd to path failed :$finalFolder"

        if [ -n "$(git status --porcelain)" ]; then
          echo "there is change to push , now commit and push"
          git add .
          git commit -m "triggled by auto check from mace}." -a
          git push "${gitUrl}" HEAD:master
        else
          echo "nothing to update."
        fi
      else
        echo "folder /$finalFolder not exist , no need to push"
      fi
    done

  else

    if [ -d "$finalFolder" ]; then
      echo "dir $finalFolder exist"
      cd ./"$finalFolder" || echo "cd to path failed :$finalFolder"

      if [ -n "$(git status --porcelain)" ]; then
        echo "there is change to push , now commit and push"
        git add .
        git commit -m "triggled by auto check from mace}." -a
        git push "${gitUrl}" HEAD:master
      else
        echo "nothing to update."
      fi
    else
      echo "folder /$finalFolder not exist , no need to push"
    fi
  fi

  echo "task $taskName done"
}

pushAndroidStudio() {
  pushFuc 1
  pushFuc 2
}
pushXCode() {
  pushFuc 3
}
pushIdeaC() {
  pushFuc 5
  pushFuc 6
}

while (($# > 0)); do # while arguments count>0
  case "$1" in
  #    -l | --lang)
  #        prog_lang=$2
  #        shift
  #        ;;
  #    -d | --dir)
  #        dir=$2
  #        shift 2
  #        ;;
  -h | --help)
    usage
    exit
    ;;
  -v | --version)
    echo ${version}
    exit
    ;;
  "configas")
    configAndroidStudio
    exit
    ;;
  "configxc")
    configXCode
    exit
    ;;
  "configidea")
    configIdea
    exit
    ;;
  "config")
    echo "now config for all"
    configAndroidStudio
    configXCode
    configIdea
    exit
    ;;
  "pushas")
    pushAndroidStudio
    exit
    ;;
  "pushxc")
    pushXCode
    exit
    ;;
  "pushidea")
    pushIdeaC
    exit
    ;;
  "push")
    pushAndroidStudio
    pushXCode
    pushIdeaC
    exit
    ;;
  "deleterb")
    deleterb
    exit
    ;;
  "sshkey")
    getSSHKey
    exit
    ;;
  "github")
    githubHelp
    exit
    ;;
  "opengoogle")
    openGoogleFolder
    exit
    ;;
  "openuserdata")
    openUserDataFolder
    exit
    ;;
  "openjetbrain")
    openJetBrainFolder
    exit
    ;;
  "test")
    echo "test function"
    testFunc
    exit
    ;;
  *) # unknown flag/switch
    POSITIONAL+=("$1")
    shift
    ;;
  esac
done
